name: 云编译3.4内核的Padavan

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'target to compile'
        options:
        - RM2100
        
      firmwarever:
        description: 'firmware''s version'
        required: true
        default: '20240903'

      upload_release:
        type: boolean
        description: 'upload firmware to RELEASE'
        required: true
        default: 'true'

env:
  REPOSITORY_URL: https://github.com/d3vil7/Padavan-yuos
  config_file: config
  custom_script: custom.sh
  WORK_PATH: /opt/padavan-3.4
  TIME_ZONE: Asia/Shanghai
  FIRMWARE_DATEPREFIX: $(date +"%Y%m%d")
  FIRMWARE_AUTHOR: neom
  FIRMWARE_PATH: /opt/firmwares
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    permissions: 
      contents: write

    steps:
    - name: 初始化工作流
      uses: actions/checkout@main
    
    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libip4tc2 libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev python3-setuptools clang
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt-get install -y gcc-13
        sudo apt-get install -y g++-13
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 60 --slave /usr/bin/g++ g++ /usr/bin/g++-13
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        curl -Ls -A 'curl' ip.im/info

    - name: 拉取源码
      run: |
        df -hT $PWD
        git clone --depth=1 $REPOSITORY_URL $WORK_PATH
        cd $WORK_PATH/toolchain-mipsel && chmod +x dl_toolchain.sh
        ./dl_toolchain.sh
        mkdir -p /opt/images/
        ln -sf /opt/padavan-3.4 $GITHUB_WORKSPACE/padavan-3.4

    - name: 同步插件设置
      run: |
        cp -f $config_file $WORK_PATH/trunk/configs/templates/${{ github.event.inputs.target }}.config
        mv $config_file $WORK_PATH/trunk/.config
        mv $custom_script $WORK_PATH/trunk/
        cd $WORK_PATH/trunk/
        chmod +x build_firmware_modify && chmod +x $custom_script
        ./$custom_script
        #########################################################################################
        sed -i "s/FIRMWARE_BUILDS_REV=.*/FIRMWARE_BUILDS_REV=${{ github.event.inputs.firmwarever }}/g" ./versions.inc
        echo '更新版本号时间'
        #########################################################################################

    - name: 编译固件
      run: |
        cd $WORK_PATH/trunk
        ./clear_tree
        fakeroot ./build_firmware_modify ${{ github.event.inputs.target }} 0
        echo "FIRMWARE_DATEPREFIX=$(date +"%Y%m%d")" >> $GITHUB_ENV
        
    - name: 整理固件文件
      id: organize
      run: |
        mkdir -p $FIRMWARE_PATH/
        cd $WORK_PATH/trunk/images
        for firmwarefile in $(ls *.trx)
        do sudo mv $firmwarefile $FIRMWARE_PATH/${FIRMWARE_DATEPREFIX}"_"${FIRMWARE_AUTHOR}"_"${{ github.event.inputs.target }}"_kernel3.4_${FIRMWARE_DATEPREFIX}"_"${FIRMWARE_AUTHOR}"_".trx"
        done
        cd $FIRMWARE_PATH
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name : 上传包
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success'
      with:
        name: Padavan3.4-${{ github.event.inputs.target }}
        path: ${{ env.FIRMWARE }}
          
  
    - name: 生成发布标签
      id: tag
      if: steps.organize.outputs.status == 'success' && github.event.inputs.upload_release == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")-Padavan3.4-${{ github.event.inputs.target }}" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件发布
      uses: softprops/action-gh-release@v2.0.4
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*     
    
    - name: 删除工作流程运行
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 4
    
    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@master
      if: github.event.inputs.upload_release == 'true' && !cancelled()
      with:
        keep_latest: 8
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 删除工件上过时的固件
      uses: c-hive/gha-remove-artifacts@v1.4.0
      if: steps.organizer.outputs.status == 'success'
      with:
        age: '1 day'
        skip-recent: 5
